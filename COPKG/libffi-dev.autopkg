@import "version.inc";
@import "common.inc";
@import "outercurve.inc";

#define { 
    flavor: "vc10";
    arch : "x86";
}

package {
    name: "libffi-dev[${flavor}]";
    version: "${package-version}";
    arch : "${arch}";
    
    display-name: "Foreign Function Interface library - development files";
    location: "http://coapp.org/repository/${OutputFilename}";

    feed: "http://coapp.org/repository/packages.atom.xml";
    publisher: "CoApp Project";
}

files[libs] {
    root: @"libffi\Release\";
    
    include: {
        "libffi.lib",
    };
    
    trim-path: all;
};

requires {
    package: "libffi-dev-common-${package-version}-any-${Package.PublicKeyToken}";
    package: "libffi[${flavor}]-${package-version}-${Package.Architecture}-${Package.PublicKeyToken}";
}

developer-library[libffi] {
    libraries : {
        libs
    };
}

license[expat] {
    license: "..\LICENSE";
    license-type: "Expat License";
}

metadata {
    author-version : "${author-version}";
    bug-tracker: "https://github.com/coapp-packages/libffi/issues";
    stability : "0";

    summary: "Foreign Function Interface library - development files";
    description: @"libffi is a library that allows software to call any function whose interface is known at runtime.";
    
    licenses : {
        expat
    };
}

compatability-policy {
    minimum: "3.0.10.1";
    maximum: "${OneLessThanCurrent}"; // this is the default
    versions : {
    }; // if not specified, find the versions by looking at the feeds and finding all the major/minor versions in range.
}
